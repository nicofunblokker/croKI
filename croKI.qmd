---
title: "croKI"
format:
  html:
    theme: flatly
    primary: "#32fbe2"
    resources: 
      - shinylive-sw.js
filters:
  - shinylive
 
---


Optimiere deine Strategie mit der KI-App `croKI`. Basierend auf Machine Learning berechnet sie präzise Gewinnwahrscheinlichkeiten in Echtzeit. Einfache Bedienung, maximale Planungssicherheit. Nutze die Zukunft des intelligenten Gewinnens – jetzt im Browser!

```{shinylive-r}
#| standalone: true
#| viewerHeight: 400

library(shiny)

train_data <- structure(list(winner = c(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 
0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 
0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 
0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 
0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 
0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 
1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 
0, 1, 0, 0, 1, 0, 0, 1, 0), rundenPunkte_kumuliert = c(0L, 55L, 
50L, 60L, 40L, 75L, 100L, 85L, 60L, 95L, 120L, 120L, 120L, 125L, 
120L, 140L, 70L, 30L, 40L, 45L, 110L, 60L, 70L, 75L, 130L, 70L, 
85L, 110L, 170L, 100L, 105L, 150L, 5L, 20L, 10L, 70L, 45L, 30L, 
25L, 100L, 80L, 40L, 70L, 155L, 90L, 55L, 110L, 200L, 80L, 35L, 
45L, 15L, 110L, 80L, 75L, 45L, 210L, 140L, 100L, 95L, 235L, 200L, 
150L, 135L, 30L, 35L, 65L, 40L, 30L, 55L, 80L, 80L, 85L, 105L, 
135L, 110L, 115L, 155L, 155L, 125L, 20L, 0L, 25L, 40L, 50L, 10L, 
65L, 60L, 105L, 25L, 115L, 95L, 145L, 55L, 135L, 110L, 50L, 45L, 
55L, 50L, 95L, 65L, 95L, 90L, 130L, 110L, 160L, 120L, 155L, 110L, 
190L, 130L, 20L, 5L, 45L, 30L, 80L, 40L, 80L, 75L, 170L, 90L, 
80L, 85L, 215L, 160L, 155L, 100L, 30L, 10L, 15L, 20L, 30L, 60L, 
35L, 70L, 70L, 100L, 75L, 125L, 90L, 130L, 115L, 165L, 40L, 0L, 
30L, 25L, 100L, 0L, 60L, 55L, 110L, 55L, 90L, 90L, 140L, 110L, 
125L, 110L, 0L, 20L, 0L, 35L, 40L, 20L, 30L, 70L, 95L, 40L, 40L, 
80L, 120L, 70L, 100L, 105L, 65L, 70L, 15L, 10L, 130L, 100L, 15L, 
10L, 210L, 145L, 30L, 95L, 240L, 170L, 80L, 125L, 55L, 60L, 25L, 
75L, 85L, 35L, 125L, 165L, 65L, 30L, 90L, 40L, 60L, 100L, 75L, 
80L, 135L, 80L), Round = c(1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 3L, 
3L, 3L, 3L, 4L, 4L, 4L, 4L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 3L, 
3L, 3L, 3L, 4L, 4L, 4L, 4L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 3L, 
3L, 3L, 3L, 4L, 4L, 4L, 4L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 3L, 
3L, 3L, 3L, 4L, 4L, 4L, 4L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 3L, 
3L, 3L, 3L, 4L, 4L, 4L, 4L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 3L, 
3L, 3L, 3L, 4L, 4L, 4L, 4L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 3L, 
3L, 3L, 3L, 4L, 4L, 4L, 4L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 3L, 
3L, 3L, 3L, 4L, 4L, 4L, 4L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 3L, 
3L, 3L, 3L, 4L, 4L, 4L, 4L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 3L, 
3L, 3L, 3L, 4L, 4L, 4L, 4L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 3L, 
3L, 3L, 3L, 4L, 4L, 4L, 4L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 3L, 
3L, 3L, 3L, 4L, 4L, 4L, 4L, 1L, 1L, 1L, 2L, 2L, 2L, 3L, 3L, 3L, 
1L, 1L, 1L, 2L, 2L, 2L, 3L, 3L, 3L), abstandZu1_kumuliert = c(60, 
5, 10, 0, 60, 25, 0, 15, 60, 25, 0, 0, 20, 15, 20, 0, 0, 40, 
30, 25, 0, 50, 40, 35, 0, 60, 45, 20, 0, 70, 65, 20, 65, 50, 
60, 0, 55, 70, 75, 0, 75, 115, 85, 0, 110, 145, 90, 0, 0, 45, 
35, 65, 0, 30, 35, 65, 0, 70, 110, 115, 0, 35, 85, 100, 35, 30, 
0, 25, 50, 25, 0, 0, 50, 30, 0, 25, 40, 0, 0, 30, 20, 40, 15, 
0, 15, 55, 0, 5, 10, 90, 0, 20, 0, 90, 10, 35, 5, 10, 0, 5, 0, 
30, 0, 5, 30, 50, 0, 40, 35, 80, 0, 60, 25, 40, 0, 15, 0, 40, 
0, 5, 0, 80, 90, 85, 0, 55, 60, 115, 0, 20, 15, 10, 40, 10, 35, 
0, 55, 25, 50, 0, 75, 35, 50, 0, 0, 40, 10, 15, 0, 100, 40, 45, 
0, 55, 20, 20, 0, 30, 15, 30, 35, 15, 35, 0, 30, 50, 40, 0, 0, 
55, 55, 15, 0, 50, 20, 15, 5, 0, 55, 60, 0, 30, 115, 120, 0, 
65, 180, 115, 0, 70, 160, 115, 5, 0, 35, 10, 0, 50, 40, 0, 100, 
60, 0, 50, 40, 0, 25, 55, 0, 55)), row.names = c(NA, -210L), class = c("tbl_df", 
"tbl", "data.frame"))

ui <- fluidPage(
  wellPanel(
    selectInput(inputId = "round",
                label = "Runde",
                choices = c(1:3),
                selected = 1),
    sliderInput(inputId = "score",
                label = "Gesamtpunkte",
                min = 0,
                max = 200,
                step = 5,
                value = 35),
    sliderInput(inputId = "deficit",
                label = "Abstand zum 1.",
                min = 0,
                max = 100,
                step = 5,
                value = 10)
  ),
  
  wellPanel(
    textOutput(outputId = "text")
  )
)

server <- function(input, output, session) {
  result <-  reactiveValues(prob = NULL)
  observe({
    model <- glm(winner ~ rundenPunkte_kumuliert*Round*abstandZu1_kumuliert, data = train_data, family = "binomial")
    new <- data.frame(rundenPunkte_kumuliert  = as.numeric(input$score),
                      Round = as.numeric(input$round),
                      abstandZu1_kumuliert = as.numeric(input$deficit))
    result$prob <- predict(model, new, type = "response")
  })
  output$text <- renderText({
    paste("Gewinnwahrscheinlichkeit: ", round(result$prob, 3))
  })
}

shinyApp(ui = ui, server = server)
```


